name: Dewey.Decimal CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  # --- JavaScript Analyzer Tests ---
  test-js:
    name: Test JavaScript Analyzer
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: |
          if [ -f package.json ]; then
            npm install
          else
            echo "No package.json found, skipping install."
          fi

      - name: Run tests
        run: |
          if [ -f package.json ]; then
            npm test
          else
            echo "⚠️ No JS tests defined, skipping."
          fi

  # --- Python Analyzer Tests ---
  test-python:
    name: Test Python Analyzer
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Install dependencies
        run: |
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt
          else
            echo "No requirements.txt found, skipping install."
          fi

      - name: Run Python tests
        run: |
          if [ -d tests ]; then
            pytest
          else
            echo "⚠️ No Python tests defined, skipping."
          fi

  # --- Go Analyzer Tests ---
  test-go:
    name: Test Go Analyzer
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.22"

      - name: Run Go tests
        run: |
          if [ -d . ]; then
            go test ./...
          else
            echo "⚠️ No Go tests defined, skipping."
          fi

# tests/test_analyzer.py
import unittest

class TestAnalyzer(unittest.TestCase):
    def test_placeholder(self):
        # Always passes
        self.assertTrue(True)

if __name__ == "__main__":
    unittest.main()

// test_analyzer.js
// Run with: npm test (or node test_analyzer.js if no test runner)
console.log("✅ JS analyzer test placeholder passed.");
process.exit(0);

// analyzer_test.go
package main

import "testing"

func TestPlaceholder(t *testing.T) {
    if 1 != 1 {
        t.Fail()
    }
}
